name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch: # opzionale: permette di avviare manualmente il build

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and create release
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-binutils
      - name: Build executable
        shell: msys2 {0}
        run: |
          windres res/docker.rc -O coff -o docker_res.o
          g++ -O2 -s -static src/docker.cpp docker_res.o -o docker.exe
      - name: Create ZIP package
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path release | Out-Null
          Copy-Item docker.exe release\
          if (Test-Path cfg\docker.cfg) { Copy-Item cfg\docker.cfg release\ }
          $zipName = "docker-${{ github.ref_name }}.zip"
          Compress-Archive -Path release\* -DestinationPath $zipName
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "${{ github.ref_name }}"
          tag_name: ${{ github.ref_name }}
          body: |
            Il pacchetto `docker-${{ github.ref_name }}.zip` contiene:
            - `docker.exe`
            - eventuali file di configurazione (`docker.cfg`)
          files: docker-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
